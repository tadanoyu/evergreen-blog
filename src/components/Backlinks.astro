---
const inoutBounds = {
    "6k_plus_minus_1_optimization": [
        "primality_test",
        "prime_numbers"
    ],
    "a_way_to_find_the_data_type_of_a_variable_in_rust": [
        "group_by_data_types"
    ],
    "access_the_icloud_folder_from_the_terminal": [],
    "andy_matuschak": [
        "evergreen_notes"
    ],
    "arrays": [
        "data_structure",
        "different_types_of_an_array",
        "you_can_add_properties_in_javascript_arrays"
    ],
    "bubble_sort": [],
    "bulk_modify_text_files_using_ruby": [],
    "bypass_entering_a_password_for_cloning_ssh_repositories_in_github": [
        "clone_all_repositories_using_github_cli",
        "create_the_ssh_configuration_file"
    ],
    "change_the_computer_name_that_displays_it_in_macos_terminal": [],
    "chat_gpt_ruined_my_confidence_in_english": [],
    "check_for_existing_gpg_keys": [],
    "class_in_ruby": [],
    "clone_all_repositories_using_github_cli": [
        "homebrew"
    ],
    "command_pattern": [],
    "common_ansi_codes": [],
    "configure_aliases_in_the_fish_shell": [
        "git_aliases",
    ],
    "configure_fish_shells_greeting_message": [
        "fish_shell"
    ],
    "configure_tmux_to_start_with_a_fish_shell": [
        "fish_shell"
    ],
    "convert_an_uppercase_to_a_lowercase_using_ascii_values":[],
    "convert_roman_numerals_to_integer": [
        "roman_numerals",
    ],
    "counting_sort": [],
    "create_the_ssh_configuration_file": [
        "generate_a_new_ssh_key",
    ],
    "data_structure": [
        "arrays",
        "linked_lists",
    ],
    "difference_between_functioncall_and_functionapply": [],
    "differences_between_arrayfilter_and_arraymap": [],
    "different_linked_lists_have_different_node_structures": [],
    "different_types_of_an_array": [
        "static_array",
        "dynamic_array",
        "jagged_array"
    ],
    "dont_be_afraid_of_asking_for_help": [
        "help_is_not_an_obligation_its_just_an_act_of_kindness",
    ],
    "dont_use_file_open_when_distributing_your_app": [],
    "dont_use_println_in_competitive_programming": [],
    "dynamically_generate_open_graph_images_using_cloudinary": [],
    "evergreen_notes": [
        "andy_matuschak"
    ],
    "factory_pattern": [],
    "fast_input_and_output": [],
    "find_the_total_sum_in_a_given_range_using_prefix_sum": [],
    "fish_shell": [
        "homebrew"
    ],
    "formatting_-_fill_and_alignment": [],
    "generate_a_new_gpg_key": [],
    "generate_a_new_ssh_key": [
        "create_the_ssh_configuration_file"
    ],
    "getting_inputs_using_io_scanner_for_competitive_programming": [],
    "git_aliases": [
        "fish_shell"
    ],
    "git_filter_repo": [
        "use_git-filter-repo_to_rewrite_commit_authors",
        "homebrew"
    ],
    "group_by_data_types": [],
    "gui_and_cli_applications_i_install_when_first_setting_up_macos": [
        "homebrew",
    ],
    "help_is_not_an_obligation_its_just_an_act_of_kindness": [
        "dont_be_afraid_of_asking_for_help"
    ],
    "homebrew": [
        "gui_and_cli_applications_i_install_when_first_setting_up_macos"
    ],
    "how_to_batch_sign_previous_commits": [],
    "how_to_sign_previous_commits": [],
    "how_to_update_the_email_associated_with_existing_gpg_key": [
        "check_for_existing_gpg_keys",
    ],
    "html2canvas_fails_to_render_images": [],
    "html2canvas_generates_blurry_images": [],
    "implementing_a_vector_using_cpp": [],
    "implementing_a_vector_using_ruby": [],
    "implementing_pkce_authorization_code_flow": [],
    "including_other_files_in_ruby": [],
    "insertion_sort": [],
    "lazyzim": [],
    "let_the_default_shell_start_up_with_tmux": [],
    "linked_list_is_better_if_lots_of_insertions_and_deletions_are_required": [
        "linked_lists",
        "different_linked_lists_have_different_node_structures",
        "linked_list_is_slow_in_look_up"
    ],
    "linked_list_is_slow_in_look_up": [
        "linked_list_is_better_if_lots_of_insertions_and_deletions_are_required"
    ],
    "linked_lists": [
        "data_structure",
        "arrays",
        "different_linked_lists_have_different_node_structures"
    ],
    "mac_setup_for_web_development": [
        "homebrew",
        "gui_and_cli_applications_i_install_when_first_setting_up_macos",
        "oh_my_fish",
        "setting_up_nvm_on_oh-my-fish",
        "lazyvim",
        "let_the_default_shell_start_up_with_tmux",
        "configure_tmux_to_start_with_a_fish_shell",
        "configure_fish_shells_greeting_message",
        "configure_aliases_in_the_fish_shell",
        "git_aliases"
    ],
    "map_vs_weak_map": [],
    "mapping_2d_array_indices_onto_1d_array": [],
    "mbti": [],
    "night_owls_can_benefit_from_miracle_morning": [],
    "now": [],
    "oh_my_fish": [
        "fish_shell",
        "setting_up_nvm_on_oh-my-fish"
    ],
    "parse_command_line_arguments_using_clap": [],
    "permanent_note_is_not_permanent": [],
    "playing_audio_file_in_rust": [
        "dont_use_fileopen_when_distributing_your_app"
    ],
    "primality_test": [
        "prime_numbers",
        "square_root_optimization",
        "6k_plus_minus_1_optimization",
        "sieve_of_eratosthenes"
    ],
    "prime_numbers": [
        "primality_test"
    ],
    "publish_your_rust_project_on_homebrew_using_github_releases": [],
    "quickest_way_to_pad_zeroes": [],
    "rename_the_master_branch_to_main": [],
    "resolving_404_error_on_vercel": [],
    "reverse_a_linked_list": [],
    "roman_numerals": [
        "convert_roman_numerals_to_integer"
    ],
    "selecting_a_module_class_in_react": [],
    "selection_sort": [],
    "setting_up_cmake_for_cpp": [
        "homebrew"
    ],
    "setting_up_nvm_on_oh-my-fish": [
        "oh_my_fish",
    ],
    "should_note-taking_be_frictionless": [
        "evergreen_notes"
    ],
    "side_project_-_command_line_pomodoro_timer": [],
    "side_project_-_things_i_want": [],
    "side_project_-_yourtrack": [
        "implementing_pkce_authorization_code_flow"
    ],
    "sieve_of_eratosthenes": [
        "prime_numbers",
    ],
    "signing_git_commits": [
        "check_for_existing_gpg_keys",
    ],
    "history_of_my_user_handles": [
        "the_origin_of_rolemadelen"
    ],
    "sort_alphabetically": [],
    "sort_string_numbers_using_sort_by": [],
    "sort_by를_사용해서_2차원_평면상의_점들을_정렬하는_방법": [],
    "square_root_optimization": [
        "primality_test",
        "6k_plus_minus_1_optimization"
    ],
    "static_array": [
        "different_types_of_an_array",
        "dynamic_array"
    ],
    "styling_webkit-scroll-value_in_safari": [],
    "the_key_to_improve_the_language_is_the_confidence": [],
    "unarchive_all_repositories_using_github_cli": [],
    "unit_testing_in_ruby": [],
    "use_ansi_codes_to_clear_the_terminal_screen": [
        "common_ansi_codes"
    ],
    "use_git-filter-repo_to_rewrite_commit_authors": [
        "git_filter_repo"
    ],
    "wake_up_with_the_intention_to_start_your_day": [],
    "writing_notes_in_your_native_language_can_help_you_retain_information_better": [
        "should_note-taking_be_frictionless"
    ],
    "you_can_add_properties_in_javascript_arrays": [
        "arrays"
    ],
    "you_can_be_more_proactive_by_being_the_first_one_to_act_with_genuine_kindness": [],
    "you_have_to_be_willing_to_be_a_fool_to_advance": [],
    "regular": [],
    "finding_what_drives_you": [],
    "how_i_learned_to_speak_japanese": [],
    "the_origin_of_rolemadelen": [
        "history_of_my_user_handles"
    ],
    "why_the_dvorak_keyboard_was_created": [],
    "qwerty_inertia": [
        "why_the_dvorak_keyboard_was_created"
    ],
    "transitioning_from_monitors_to_a_vr_workspace": []
};

const currentPath = Astro.url.pathname.split('/')[2];
const backlinks = Object.keys(inoutBounds).filter(key => inoutBounds[key].includes(currentPath));

const capitalizeFirstChar = (str) => {
    if (str.length === 0) return str; // Handle empty strings
    return str.charAt(0).toUpperCase() + str.slice(1);
}

---

<style lang="scss">
    .bounds {
        margin-top: 8rem;
    }

</style>
<div class="bounds">
    <!-- {inoutBounds[currentPath] && inoutBounds[currentPath].length > 0 && (
        <h2>Outbound Links:</h2>
        <ul>
            {inoutBounds[currentPath].map(path => (
                <li class="outbound">
                    <a href={`/notes/${path}`}>{path.split('_').join(' ')}</a>
                </li>
            ))}
        </ul>
    )} -->
    {backlinks.length > 0 && (
        <div>This note was mentioned in...</div>
        <ul>
            {backlinks.map(link => (
                <li key={link}>
                    <a href={`/notes/${link}`}>{capitalizeFirstChar(link.split('_').join(' '))}</a>
                </li>
            ))}
        </ul>
    )}
</div>