---
import { getCollection } from 'astro:content';
import { useTranslations } from '../../../i18n/utils';
import { BaseHead, Footer } from '@components/index';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../../consts';

const lang = "en";
const t = useTranslations(lang);
const posts = (await getCollection('writing')).sort((a, b) => {
	let dateA = a.data.pubDate
	let dateB = b.data.pubDate

	return new Date(dateB).valueOf() - new Date(dateA).valueOf();
});

---

<!doctype html>
<html lang={lang}>
	<head>
		<title>diary / jiiyoo.me</title>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style lang="scss">
			.header {
				margin-bottom: 3rem;

				& .title {
					display: flex;
					justify-content: space-between;

					& .lang_selector {
						margin-top: 3.5rem;

						& a {
							padding: 0.25rem 0.5rem;
							text-decoration: none;

							&:hover {
								cursor: pointer;
							}
						}
					}
				}

				& > span,
				.menu {
					font-size: var(--sm);
				}
			}
			
			.posts {
				a {
					text-decoration: none;
					display: block;
					
					&:hover {
						background-color: inherit;
					}
					
					& span {
						padding: 0.2rem;
						transition: all 0.2s ease-in-out;
					}

				}
				
				& > ul {
					padding: 0;
				}
				
				li {
					list-style: none;
					transition: opacity 0.2s ease;
					margin-bottom: 0.5rem;

					&:hover{
						a .title {
							background-color: rgb(var(--gray-light));
							border-radius: 3px;
						}
					}

					& .update {
						font-style: italic;
					}
				}

				.head {
					margin-bottom: 0.5rem;
				}
			}

			.navi {
				display: flex;
				align-items: center;
				
				a {
					color: inherit;
					font-size: var(--sm);
				}

				.by {
					font-size: var(--xs);
				}
			}

			.separator {
				margin: 0 0.5rem;
			}

			.date {
				display: block;
				font-size: var(--xs);
				// text-transform: lowercase;
				color: #aaa;
				margin-left: 0.25rem;
			}
		</style>
	</head>
	<body>
		<main>
			<section>
				<div class="header">
					<div class="title">
						<h1>{t('home.menu2')['title']}</h1>
						<div class="lang_selector">
							<a href="/writing">가</a>
							<a href="/ja/writing">あぁ</a>
						</div>
					</div>
					<span>{t('home.menu2')['exp']}</span>
					<div class="navi">
						<div class="author">
							<span class="by">by</span>
							<a href="/en">{t('home.name')}</a>
						</div>
						<span class="separator">・</span>
						<div class="navi_item">
							<a href="/en/note">{t('home.menu1')['title']}</a>
						</div>
					</div>
				</div>
				<div class="posts">
					<ul>
						{
							posts.map((post) => (
								(post.data.lang == lang && (
									<li>
										<a href={`/en/writing/${post.id}/`}>
											<div class="head">
												<div class="date">
													{new Date(post.data.pubDate).toLocaleDateString('en-us', {
													year: 'numeric',
													month: 'short',
													day: 'numeric',
													})}
												</div>
												<span class="title">{post.data.title}</span>
											</div>
										</a>
									</li>
								))
							))
						}
					</ul>
				</div>
			</section>
		</main>
		<Footer lang={lang} />
	</body>
</html>
